PROCEDURE global GET_MODEL_NAMESPACES modelId: integer result: reference
{
    SETL prefixesValues:("")
    CC "Core" GET_CLASS_ID objid:(modelId)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Model Namespaces"
    SETL modelNamespacesId:(attrid)
    #attrid
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(modelId) attrid:(modelNamespacesId)
	FOR i in:(rowids)
	{
		CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
		SETL prefixValue:(val)
		CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Dictionary"
		SETL dictionaryValue:(val)
        SETL prefixesValues:(prefixesValues + "@prefix " + prefixValue + " " + dictionaryValue + ".\n")
	}
    SETL prefixesValues:(prefixesValues + "\n")
    SETL result:(prefixesValues)
}

PROCEDURE global GET_DFDPROCESS_ATTRIBUTES objId: integer prefixUri: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL dfdProcessAttrs:("")
    SETL dfdProcessAttrs:(dfdProcessAttrs + prefixUri + " a " + "ex:Process" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL dfdProcessDescription:(val)
    IF (dfdProcessDescription != "")
    {
        SETL dfdProcessAttrs:(dfdProcessAttrs + prefixUri + " ex:describesProcess " + "\"" + dfdProcessDescription + "\"" + "^^" + "xsd:string" + ".\n")
    }
    #CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Project Path"
    #SETL dfdProcessProjectPath:(val)
    #IF (dfdProcessProjectPath != "")
    #{
    #    SETL dfdProcessAttrs:(dfdProcessAttrs + prefixUri + " ex:hasProjectPath " + "\"" + dfdProcessProjectPath + "\"" + "^^" + "xsd:string" + ".\n")
    #}
    #Susceptible Threats --------------------------
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Susceptible Threats"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        SETL dfdSusceptibleThreatsAttributeId:(attrid)
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Threat")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Threat")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL threatObjName:(tobjname)
            SETL threatObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(threatObjClassId) objname:(threatObjName)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
            SETL threatPrefix:(val)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
            SETL threatUri:(val)
            SETL threatPrefixUri:(threatPrefix + threatUri)
        }
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Comment"
		SETL comment:(val)
		SETL dfdProcessAttrs:(dfdProcessAttrs + prefixUri + " ex:hasSusceptibleThreats " + "[" + "ex:representedBy " + threatPrefixUri + "; " + "ex:comment " + "\"" + comment + "\"" + "; " + "a" + " ex:Threat " + "].\n")
    }
    #End Susceptible Threats ----------------------
    
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Mitigations Audit"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        SETL dfdProcessMitigationAttributeId:(attrid)
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Mitigation")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Mitigation")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL mitigationObjName:(tobjname)
            SETL mitigationObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(mitigationObjClassId) objname:(mitigationObjName)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
            SETL mitigationPrefix:(val)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
            SETL mitigationUri:(val)
            SETL mitigationPrefixUri:(mitigationPrefix + mitigationUri)
        }
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Comment"
		SETL comment:(val)
		SETL dfdProcessAttrs:(dfdProcessAttrs + prefixUri + " ex:hasMitigations " + "[" + "ex:representedBy " + mitigationPrefixUri + "; " + "ex:comment " + "\"" + comment + "\"" + "; " + "a" + " ex:Mitigation " + "].\n")
    }
    SETL result:(dfdProcessAttrs)
}

PROCEDURE global GET_DFDEXTERNALENTITY_ATTRIBUTES objId: integer prefixUri: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL dfdExternalEntityAttrs:("")
    SETL dfdExternalEntityAttrs:(dfdExternalEntityAttrs + prefixUri + " a " + "ex:ExternalEntity" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL dfdExternalEntityDescription:(val)
    IF (dfdExternalEntityDescription != "")
    {
        SETL dfdExternalEntityAttrs:(dfdExternalEntityAttrs + prefixUri + " ex:describesExternalEntity " + "\"" + dfdExternalEntityDescription + "\"" + "^^" + "xsd:string" + ".\n")
    }

    #Susceptible Threats --------------------------
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Susceptible Threats"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        SETL dfdSusceptibleThreatsAttributeId:(attrid)
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Threat")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Threat")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL threatObjName:(tobjname)
            SETL threatObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(threatObjClassId) objname:(threatObjName)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
            SETL threatPrefix:(val)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
            SETL threatUri:(val)
            SETL threatPrefixUri:(threatPrefix + threatUri)
        }
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Comment"
		SETL comment:(val)
		SETL dfdExternalEntityAttrs:(dfdExternalEntityAttrs + prefixUri + " ex:hasSusceptibleThreats " + "[" + "ex:representedBy " + threatPrefixUri + "; " + "ex:comment " + "\"" + comment + "\"" + "; " + "a" + " ex:Threat " + "].\n")
    }
    #End Susceptible Threats ----------------------

    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Mitigations Audit"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        SETL dfdExternalEntityMitigationAttributeId:(attrid)
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Mitigation")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Mitigation")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL mitigationObjName:(tobjname)
            SETL mitigationObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(mitigationObjClassId) objname:(mitigationObjName)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
            SETL mitigationPrefix:(val)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
            SETL mitigationUri:(val)
            SETL mitigationPrefixUri:(mitigationPrefix + mitigationUri)
        }
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Comment"
		SETL comment:(val)
		SETL dfdExternalEntityAttrs:(dfdExternalEntityAttrs + prefixUri + " ex:hasMitigations " + "[" + "ex:representedBy " + mitigationPrefixUri + "; " + "ex:comment " + "\"" + comment + "\"" + "; " + "a" + " ex:Mitigation " + "].\n")
    }
    
    SETL result:(dfdExternalEntityAttrs)
}

PROCEDURE global GET_DFDDATASTORE_ATTRIBUTES objId: integer prefixUri: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL dfdDataStoreAttrs:("")
    SETL dfdDataStoreAttrs:(dfdDataStoreAttrs + prefixUri + " a " + "ex:DataStore" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL dfdDataStoreDescription:(val)
    IF (dfdDataStoreDescription != "")
    {
        SETL dfdDataStoreAttrs:(dfdDataStoreAttrs + prefixUri + " ex:describesDataStore " + "\"" + dfdDataStoreDescription + "\"" + "^^" + "xsd:string" + ".\n")
    }
    #Susceptible Threats --------------------------
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Susceptible Threats"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        SETL dfdSusceptibleThreatsAttributeId:(attrid)
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Threat")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Threat")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL threatObjName:(tobjname)
            SETL threatObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(threatObjClassId) objname:(threatObjName)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
            SETL threatPrefix:(val)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
            SETL threatUri:(val)
            SETL threatPrefixUri:(threatPrefix + threatUri)
        }
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Comment"
		SETL comment:(val)
		SETL dfdDataStoreAttrs:(dfdDataStoreAttrs + prefixUri + " ex:hasSusceptibleThreats " + "[" + "ex:representedBy " + threatPrefixUri + "; " + "ex:comment " + "\"" + comment + "\"" + "; " + "a" + " ex:Threat " + "].\n")
    }
    #End Susceptible Threats ----------------------

    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Mitigations Audit"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        SETL dfdDataStoreMitigationAttributeId:(attrid)
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Mitigation")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Mitigation")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL mitigationObjName:(tobjname)
            SETL mitigationObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(mitigationObjClassId) objname:(mitigationObjName)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
            SETL mitigationPrefix:(val)
            CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
            SETL mitigationUri:(val)
            SETL mitigationPrefixUri:(mitigationPrefix + mitigationUri)
        }
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Comment"
		SETL comment:(val)
		SETL dfdDataStoreAttrs:(dfdDataStoreAttrs + prefixUri + " ex:hasMitigations " + "[" + "ex:representedBy " + mitigationPrefixUri + "; " + "ex:comment " + "\"" + comment + "\"" + "; " + "a" + " ex:Mitigation " + "].\n")
    }
    
    SETL result:(dfdDataStoreAttrs)
}

PROCEDURE global GET_DFDDATAFLOW_ATTRIBUTES objId: integer prefixUri: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL dfdDataFlowAttrs:("")
    SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + prefixUri + " a " + "ex:DataFlow" + ".\n")
    CC "Core" GET_CONNECTOR_ENDPOINTS objid:(objId)
    SETL fromObjId:(fromobjid)
    SETL toObjId:(toobjid)
    CC "Core" GET_ATTR_VAL objid:(fromObjId) attrname:"Protocol"
    SETL dataFlowProtocol:(val)
    SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + prefixUri + " ex:protocol " + "\"" + dataFlowProtocol + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(fromObjId) attrname:"Boundary type"
    SETL dataFlowBoundary:(val)
    IF (dataFlowBoundary != "")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + prefixUri + " ex:boundaryType " + "\"" + dataFlowBoundary + "\"" + ".\n")
    }
    CC "Core" GET_ATTR_VAL objid:(fromObjId) attrname:"Prefix"
    SETL fromObjPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(fromObjId) attrname:"URI"
    SETL fromObjUri:(val)
    CC "Core" GET_ATTR_VAL objid:(toObjId) attrname:"Prefix"
    SETL toObjPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(toObjId) attrname:"URI"
    SETL toObjUri:(val)
    CC "Core" GET_CLASS_ID objid:(fromObjId)
    CC "Core" GET_CLASS_NAME classid:(classid)
    SETL fromClassName:(classname)
    CC "Core" GET_CLASS_ID objid:(toObjId)
    CC "Core" GET_CLASS_NAME classid:(classid)
    SETL toClassName:(classname)
    IF(fromClassName = "DFDProcess")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + fromObjPrefix + fromObjUri + " ex:hasOutputDataFlow " + prefixUri + ".\n")
    }
    IF(toClassName = "DFDProcess")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + toObjPrefix + toObjUri + " ex:hasInputDataFlow " + prefixUri + ".\n")
    }
    IF(fromClassName = "DFDProcess" OR fromClassName = "DFDExternalEntity")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + prefixUri + " ex:sourceDataFlow " + fromObjPrefix + fromObjUri + ".\n")
    }
    IF(toClassName = "DFDProcess" OR toClassName = "DFDExternalEntity")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + prefixUri + " ex:destinationDataFlow " + toObjPrefix + toObjUri + ".\n")
    }
    IF(toClassName = "DFDDataStore")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + toObjPrefix + toObjUri + " ex:storesDataFlow " + prefixUri + ".\n")
    }
    IF(fromClassName = "DFDDataStore")
    {
        SETL dfdDataFlowAttrs:(dfdDataFlowAttrs + fromObjPrefix + fromObjUri + " ex:providesDataFlow " + prefixUri + ".\n")
    }

    #CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    #SETL dfdDataStoreDescription:(val)
    #SETL dfdDataStoreAttrs:(dfdDataStoreAttrs + prefixUri + " ex:describesDataStore " + "\"" + dfdDataStoreDescription + "\"" + "^^" + "xsd:string" + ".\n")
    SETL result:(dfdDataFlowAttrs)
}


#-------------------------
CC "Modeling" GET_ACT_MODEL
SETL actModelId: (modelid)

CC "Core" GET_ATTR_VAL objid:(actModelId) attrname:"Model Prefix"
SETL modelPrefix:(val)

CC "Core" GET_ATTR_VAL objid:(actModelId) attrname:"Model URI"
SETL modelUri:(val)

SETL namespaces:("")
SETL endMessage:("")

GET_MODEL_NAMESPACES modelId:(actModelId) result:namespaces

IF(modelPrefix != "" AND modelUri != "")
{
    SETL message:(modelPrefix + modelUri + "\n" + "{" + "\n")
    SETL message:(namespaces + message)
    SETL endMessage:("}")

}
ELSE
{
    SETL message:("")
    SETL message:(message + namespaces)
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"DFDProcess"
SETL dfdProcessObjids:(objids)
FOR i in:(dfdProcessObjids)
{
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    SETL dfdProcessPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL dfdProcessUri:(val)
    SETL dfdProcessPrefixUri:(dfdProcessPrefix + dfdProcessUri)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + dfdProcessPrefixUri + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_DFDPROCESS_ATTRIBUTES objId:(VAL i) prefixUri:(dfdProcessPrefixUri) result:dfdProcessAttrs 
    SETL message:(message + dfdProcessAttrs)
    SETL dfdProcessAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"DFDExternalEntity"
SETL dfdExternalEntityObjids:(objids)
FOR i in:(dfdExternalEntityObjids)
{
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    SETL dfdExternalEntityPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL dfdExternalEntityUri:(val)
    SETL dfdExternalEntityPrefixUri:(dfdExternalEntityPrefix + dfdExternalEntityUri)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + dfdExternalEntityPrefixUri + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_DFDEXTERNALENTITY_ATTRIBUTES objId:(VAL i) prefixUri:(dfdExternalEntityPrefixUri) result:dfdExternalEntityAttrs 
    SETL message:(message + dfdExternalEntityAttrs)
    SETL dfdExternalEntityAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"DFDDataStore"
SETL dfdDataStoreObjids:(objids)
FOR i in:(dfdDataStoreObjids)
{
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    SETL dfdDataStorePrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL dfdDataStoreUri:(val)
    SETL dfdDataStorePrefixUri:(dfdDataStorePrefix + dfdDataStoreUri)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + dfdDataStorePrefixUri + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_DFDDATASTORE_ATTRIBUTES objId:(VAL i) prefixUri:(dfdDataStorePrefixUri) result:dfdDataStoreAttrs 
    SETL message:(message + dfdDataStoreAttrs)
    SETL dfdDataStoreAttrs:("")
}

CC "Core" GET_ALL_CONNECTORS modelid:(actModelId)
FOR i in:(objids)
{
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    SETL dfdDataFlowPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL dfdDataFlowUri:(val)
    SETL dfdDataFlowPrefixUri:(dfdDataFlowPrefix + dfdDataFlowUri)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + dfdDataFlowPrefixUri + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_DFDDATAFLOW_ATTRIBUTES objId:(VAL i) prefixUri:(dfdDataFlowPrefixUri) result:dfdDataFlowAttrs 
    SETL message:(message + dfdDataFlowAttrs)
    SETL dfdDataFlowAttrs:("")
}

IF (endMessage != "")
{
    SETL message:(message + endMessage)
    CC "AdoScript" VIEWBOX text:(message)
    SETL filePath:("D:\\Andrei\\ModellingTools\\Threat_Modeling_Tool\\Scripts\\Results\\dfd_graph.trig")
    CC "AdoScript" FWRITE file:(filePath) text:(message) binary:0
    SETL filePath:("D:\\Andrei\\ModellingTools\\Threat_Modeling_Tool\\Scripts\\Results\\dfd_serialization_type.txt")
    CC "AdoScript" FWRITE file:(filePath) text:("trig") binary:0
}
ELSE
{
    CC "AdoScript" VIEWBOX text:(message)
    SETL filePath:("D:\\Andrei\\ModellingTools\\Threat_Modeling_Tool\\Scripts\\Results\\dfd_graph.ttl")
    CC "AdoScript" FWRITE file:(filePath) text:(message) binary:0
    SETL filePath:("D:\\Andrei\\ModellingTools\\Threat_Modeling_Tool\\Scripts\\Results\\dfd_serialization_type.txt")
    CC "AdoScript" FWRITE file:(filePath) text:("turtle") binary:0
}