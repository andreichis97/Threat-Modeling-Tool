PROCEDURE CALCULATE_DFD_ELEMENT_SCORE objId: integer result: reference
{
    SETL resultMessage:("")
    SETL spoofing:(0)
    SETL tampering:(0)
    SETL repudiation:(0)
    SETL informationDis:(0)
    SETL elevationOfPriv:(0)
    SETL denialOfServ:(0)
    SETL spoofingMit:(0)
    SETL tamperingMit:(0)
    SETL repudiationMit:(0)
    SETL informationDisMit:(0)
    SETL elevationOfPrivMit:(0)
    SETL denialOfServMit:(0)
    SETL hasSpoofing:(0)
    SETL hasTampering:(0)
    SETL hasRepudiation:(0)
    SETL hasInformationDis:(0)
    SETL hasElevationOfPriv:(0)
    SETL hasDenialOfServ:(0)

    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:("Susceptible Threats")
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Threat")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Threat")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL threatObjName:(tobjname)
            SETL threatObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(threatObjClassId) objname:(threatObjName)
            SETL threatName:(threatObjName)
            CC "Core" GET_CONNECTORS objid:(objid) out
            SETL number:(LEN objids)
            SETL number:((number + 1) / 7)
            IF(threatName = "Spoofing Identity")
            {
                SETL spoofing:(number)
                SETL hasSpoofing:(1)
            }
            IF(threatName = "Tampering with Data")
            {
                SETL tampering:(number)
                SETL hasTampering:(1)
            }
            IF(threatName = "Repudiation")
            {
                SETL repudiation:(number)
                SETL hasRepudiation:(1)
            }
            IF(threatName = "Information Disclosure")
            {
                SETL informationDis:(number)
                SETL hasInformationDis:(1)
            }
            IF(threatName = "Elevation of Privilege")
            {
                SETL elevationOfPriv:(number)
                SETL hasElevationOfPriv:(1)
            }
            IF(threatName = "Denial of Service")
            {
                SETL denialOfServ:(number)
                SETL hasDenialOfServ:(1)
            }
        }
    }

    CC "Core" GET_ATTR_ID classid:(classid) attrname:("Mitigations Audit")
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_INTERREF objid:(VAL i) attrname:("Mitigation")
        CC "Core" GET_INTERREF_COUNT objid:(VAL i) attrname:("Mitigation")
        SETL intrfCount:(count)
        IF(intrfCount > 0)
        {
            SETL modelIdToEnter:(tmodelid)
            SETL mitigationObjName:(tobjname)
            SETL mitigationObjClassId:(tclassid)
            CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
            IF (NOT(isopened))
            {
                CC "Modeling" OPEN modelids:(modelIdToEnter)
            }
            CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(mitigationObjClassId) objname:(mitigationObjName)
            #CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Name"
            #SETL mitigationName:(val)

            CC "Core" GET_CONNECTORS objid:(objid) in

            FOR j in:(objids)
            {
                CC "Core" GET_CONNECTOR_ENDPOINTS objid:(VAL j)
                CC "Core" GET_ATTR_VAL objid:(fromobjid) attrname:("Name")
                SETL fromName:(val)
                IF(fromName = "Spoofing Identity")
                {
                    SETL spoofingMit:(spoofingMit + 1)
                }
                IF(fromName = "Tampering with Data")
                {
                    SETL tamperingMit:(tamperingMit + 1)
                }
                IF(fromName = "Repudiation")
                {
                    SETL repudiationMit:(repudiationMit + 1)
                }
                IF(fromName = "Information Disclosure")
                {
                    SETL informationDisMit:(informationDisMit + 1)
                }
                IF(fromName = "Elevation of Privilege")
                {
                    SETL elevationOfPrivMit:(elevationOfPrivMit + 1)
                }
                IF(fromName = "Denial of Service")
                {
                    SETL denialOfServMit:(denialOfServMit + 1)
                }
            }
        }
    }

    SETL spoofingMessage:("Spoofing Identity: " + STR spoofingMit + " / " + STR spoofing + "\n")
    SETL tamperingMessage:("Tampering with Data: " + STR tamperingMit + " / " + STR tampering + "\n")
    SETL repudiationMessage:("Repudiation: " + STR repudiationMit + " / " + STR repudiation + "\n")
    SETL informationDisMessage:("Information Disclosure: " + STR informationDisMit + " / " + STR informationDis + "\n")
    SETL elevationOfPrivMessage:("Elevation of Privilege: " + STR elevationOfPrivMit + " / " + STR elevationOfPriv + "\n")
    SETL denialOfServMessage:("Denial of Service: " + STR denialOfServMit + " / " + STR denialOfServ + "\n")

    IF(hasSpoofing = 1)
    {
        SETL resultMessage:(resultMessage + spoofingMessage)
    }
    IF(hasTampering = 1)
    {
        SETL resultMessage:(resultMessage + tamperingMessage)
    }
    IF(hasRepudiation = 1)
    {
        SETL resultMessage:(resultMessage + repudiationMessage)
    }
    IF(hasInformationDis = 1)
    {
        SETL resultMessage:(resultMessage + informationDisMessage)
    }
    IF(hasElevationOfPriv = 1)
    {
        SETL resultMessage:(resultMessage + elevationOfPrivMessage)
    }
    IF(hasDenialOfServ = 1)
    {
        SETL resultMessage:(resultMessage + denialOfServMessage)
    }
    SETL resultMessage:(resultMessage + "\n")
    SETL result:(resultMessage)
}

#----------------------------------------------

CC "Modeling" GET_ACT_MODEL
SETL actModelId: (modelid)
SETL finalResults:("")

CC "Core" GET_ALL_OBJS modelid:(actModelId)
FOR i in:(objids)
{
    SETL objResult:("")
    CC "Core" GET_CLASS_ID objid:(VAL i)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Name")
    SETL objName:(val)
    IF(classname = "DFDProcess" OR classname = "DFDExternalEntity" OR classname = "DFDDataStore")
    {
        CALCULATE_DFD_ELEMENT_SCORE objId:(VAL i) result:objResult
        SETL finalResults:(finalResults + "Element " + objName + " has the following scores: \n" + objResult)
    }
}

CC "AdoScript" VIEWBOX text:(finalResults)
